#!/bin/bash

command=""
cert=""
pvt=""

while getopts "d:c:p:" arg; do
    case $arg in
        c) cert=$OPTARG;;
        p) pvt=$OPTARG;;
        d) command=$OPTARG
    esac
done

if [ -z "${command}" ]; then
    echo "Command required. Usage: frontend-server -d <command> [-c <certfile>] [-p <pvtkey>]"
    exit 1
fi

get_script_path() {
    temp=`pwd`
    cd `dirname $0`
    script_path=`pwd`
    cd $temp
    echo "$script_path"
}

root=`get_script_path`

if [ $command == "start" ]; then
    if [ -z "${cert}" ] || [ -z "${pvt}" ]; then
        echo "Please provide cert and pvt key Usage: frontend-server -d <command> [-c <certfile>] [-p <pvtkey>]"
        exit 1
    fi
    LD_LIBRARY_PATH=$root/../lib/ $root/Server $root/../configs/AuthConfig.json $cert $pvt&
elif [ $command == "stop" ]; then
    kill -9 `cat /opt/PersonalSite/.pid`
    rm -rf /opt/PersonalSite/.pid
elif [ $command == "status" ]; then
    if [ -f "/opt/PersonalSite/.pid" ]; then
        echo "Server running as pid: `cat /opt/PersonalSite/.pid`"
    else
        echo "Server not running."
    fi
else
    echo "Incorrect command. valid commands are [start, stop, status]"
fi
